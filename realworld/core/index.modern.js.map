{"version":3,"file":"index.modern.js","sources":["../../packages/core/src/api/credentials.ts","../../packages/core/src/api/endpoint.ts","../../packages/core/src/proxy/auth.ts","../../packages/core/src/task/auth.ts","../../packages/core/src/task/fade.ts"],"sourcesContent":["import { Factor, Kernel, Target } from '@sgrud/core';\nimport { BehaviorSubject, filter, from, observable, Subscribable, switchMap, take } from 'rxjs';\nimport { Api } from './typing';\n\n@Target<typeof Credentials>()\nexport class Credentials {\n\n  public readonly [Symbol.observable]: () => Subscribable<Api.User>;\n\n  private readonly changes: BehaviorSubject<Api.User | null>;\n\n  @Factor(() => Kernel)\n  private readonly kernel!: Kernel;\n\n  public get [observable](): () => Subscribable<Api.User> {\n    return () => this.changes.asObservable().pipe(filter(Boolean));\n  }\n\n  public get user(): Api.User | null {\n    return this.changes.value;\n  }\n\n  public set user(value: Api.User | null) {\n    this.changes.next(value);\n  }\n\n  public constructor() {\n    this.changes = new BehaviorSubject<Api.User | null>(null);\n    const user = localStorage.getItem('user');\n\n    from(this).pipe(switchMap(() => {\n      return this.kernel.resolve('sgrud-realworld-lazy', '/realworld/lazy');\n    }), switchMap((module) => {\n      return this.kernel.insmod(module, '/realworld/lazy', true);\n    }), take(1)).subscribe();\n\n    if (user) {\n      this.changes.next(JSON.parse(user));\n    }\n\n    this.changes.subscribe((next) => {\n      localStorage.setItem('user', JSON.stringify(next));\n    });\n  }\n\n}\n","import { Factor, HttpClient, Target } from '@sgrud/core';\nimport { map, Observable } from 'rxjs';\nimport { Credentials } from './credentials';\nimport { Api, Resource } from './typing';\n\n@Target<typeof Endpoint>()\nexport class Endpoint {\n\n  public readonly url: string = '//api.realworld.io/api';\n\n  @Factor(() => Credentials)\n  protected credentials!: Credentials;\n\n  public getArticle(slug: string): Observable<Api.Article> {\n    return HttpClient.get<Resource.Article>(`${this.url}/${slug}`).pipe(\n      map(({ response }) => response.article)\n    );\n  }\n\n  public getArticlePage(\n    limit: number,\n    offset: number\n  ): Observable<Resource.Articles> {\n    return this.getPage('articles', limit, offset);\n  }\n\n  public getFeedPage(\n    limit: number,\n    offset: number\n  ): Observable<Resource.Articles> {\n    return this.getPage('feed', limit, offset);\n  }\n\n  public getPage(\n    from: string,\n    limit: number,\n    offset: number\n  ): Observable<Resource.Articles> {\n    return new HttpClient().handle<Resource.Articles>({\n      queryParams: { limit, offset },\n      url: `${this.url}/${from}`\n    }).pipe(\n      map(({ response }) => response)\n    );\n  }\n\n  public getTags(): Observable<string[]> {\n    return HttpClient.get<Resource.Tags>(`${this.url}/tags`).pipe(\n      map(({ response }) => response.tags)\n    );\n  }\n\n  public login(\n    email: string,\n    password: string\n  ): Observable<Api.User> {\n    return HttpClient.post<Resource.User>(`${this.url}/users/login`, {\n      user: { email, password }\n    }).pipe(map(({ response }) => {\n      this.credentials.user = response.user;\n      return response.user;\n    }));\n  }\n\n  public register(\n    email: string,\n    username: string,\n    password: string\n  ): Observable<Api.User> {\n    return HttpClient.post<Resource.User>(`${this.url}/users`, {\n      user: { email, username, password }\n    }).pipe(map(({ response }) => {\n      this.credentials.user = response.user;\n      return response.user;\n    }));\n  }\n\n}\n","import { assign, Factor, HttpHandler, HttpProxy, Provider, Target } from '@sgrud/core';\nimport { from, Observable } from 'rxjs';\nimport { AjaxConfig as Request, AjaxResponse as Response } from 'rxjs/ajax';\nimport { Credentials } from '../api/credentials';\nimport { Endpoint } from '../api/endpoint';\n\n@Target<typeof AuthProxy>()\nexport class AuthProxy\n  extends Provider<typeof HttpProxy>('sgrud.core.http.HttpProxy') {\n\n  @Factor(() => Credentials)\n  private credentials!: Credentials;\n\n  @Factor(() => Endpoint)\n  private endpoint!: Endpoint;\n\n  private token?: string;\n\n  public constructor() {\n    super();\n\n    from(this.credentials).subscribe((next) => {\n      this.token = next.token;\n    });\n  }\n\n  public override proxy<T>(\n    request: Request,\n    handler: HttpHandler\n  ): Observable<Response<T>> {\n    if (request.url.startsWith(this.endpoint.url) && this.token) {\n      return handler.handle(assign(request, {\n        headers: { ...request.headers, authorization: 'Token ' + this.token }\n      }));\n    }\n\n    return handler.handle(request);\n  }\n\n}\n","import { Factor, Provider, Target } from '@sgrud/core';\nimport { Router, RouterTask } from '@sgrud/shell';\nimport { Observable, of } from 'rxjs';\nimport { Credentials } from '../api/credentials';\n\n@Target<typeof AuthTask>()\nexport class AuthTask\n  extends Provider<typeof RouterTask>('sgrud.shell.router.RouterTask') {\n\n  @Factor(() => Credentials)\n  private credentials!: Credentials;\n\n  @Factor(() => Router)\n  private router!: Router;\n\n  private readonly private: RegExp = /^\\/(editor|(profile|settings)$)/;\n\n  private readonly public: RegExp = /^\\/(login|register)$/;\n\n  public handle(\n    prev: Router.State<string>,\n    next: Router.State<string>,\n    handler: Router.Task\n  ): Observable<Router.State<string>> {\n    if (this.credentials.user) {\n      if (this.public.exec(next.path)) {\n        return of(prev);\n      }\n    } else {\n      if (this.private.exec(next.path)) {\n        return this.router.navigate('login');\n      }\n    }\n\n    return handler.handle(next);\n  }\n\n}\n","import { Provider, Target } from '@sgrud/core';\nimport { Router, RouterTask } from '@sgrud/shell';\nimport { delay, finalize, Observable, switchMap, timer } from 'rxjs';\n\n@Target<typeof FadeTask>()\nexport class FadeTask\n  extends Provider<typeof RouterTask>('sgrud.shell.router.RouterTask') {\n\n  public element?: HTMLElement;\n\n  public handle(\n    _prev: Router.State<string>,\n    next: Router.State<string>,\n    handler: Router.Task\n  ): Observable<Router.State<string>> {\n    if (this.element) {\n      this.element.style.transition ||= 'opacity 100ms';\n      this.element.style.opacity = '0';\n\n      return timer(100).pipe(\n        switchMap(() => handler.handle(next).pipe(delay(50))),\n        finalize(() => this.element!.style.opacity = '1')\n      );\n    }\n\n    return handler.handle(next);\n  }\n\n}\n"],"names":["Credentials","Symbol","observable","this","changes","asObservable","pipe","filter","Boolean","user","value","next","constructor","kernel","BehaviorSubject","localStorage","getItem","from","switchMap","resolve","module","insmod","take","subscribe","JSON","parse","setItem","stringify","__decorate","Factor","Kernel","prototype","Target","Endpoint","url","credentials","getArticle","slug","HttpClient","get","map","response","article","getArticlePage","limit","offset","getPage","getFeedPage","handle","queryParams","getTags","tags","login","email","password","post","register","username","AuthProxy","Provider","super","endpoint","token","proxy","request","handler","startsWith","assign","headers","authorization","AuthTask","args","router","private","public","prev","exec","path","of","navigate","Router","FadeTask","element","_prev","_this$element$style","style","transition","opacity","delay","finalize"],"mappings":"+XAKaA,GAEMC,EAAAA,OAAOC,WAF1B,MAScA,IAAAA,KACV,MAAO,IAAMC,KAAKC,QAAQC,eAAeC,KAAKC,EAAOC,UAG5CC,WACT,OAAON,KAAKC,QAAQM,MAGXD,SAAKC,GACdP,KAAKC,QAAQO,KAAKD,GAGpBE,cAjBiBR,KAAAA,QAAAA,EAAAA,KAAAA,oBAGAS,YAcjB,EACEV,KAAKC,QAAU,IAAAU,EAAqC,MACpD,MAAUL,EAAGM,aAAaC,QAAQ,QAElCC,EAAKd,MAAMG,KAAKY,EAAU,IACZL,KAAAA,OAAOM,QAAQ,uBAAwB,oBACjDD,EAAWE,GACNjB,KAAKU,OAAOQ,OAAOD,EAAQ,mBAAmB,IACnDE,EAAK,IAAIC,YAETd,GACFN,KAAKC,QAAQO,KAAKa,KAAKC,MAAMhB,IAG/BN,KAAKC,QAAQmB,UAAWZ,IACtBI,aAAaW,QAAQ,OAAQF,KAAKG,UAAUhB,SA7BhDiB,EAAA,CADCC,EAAO,IAAMC,IACmB9B,EAAA+B,UAAA,cAAA,GAPtB/B,EAAW4B,EAAA,CADvBI,KACYhC,GCCAiC,IAAQA,EAArB,MAAqBrB,cAAAT,KAEH+B,IAAc,8BAGpBC,iBALS,EAOZC,WAAWC,GAChB,OAAOC,EAAWC,IAAyB,GAAApC,KAAK+B,OAAOG,KAAQ/B,KAC7DkC,EAAI,EAAGC,SAAAA,KAAeA,EAASC,UAI5BC,eACLC,EACAC,GAEA,OAAYC,KAAAA,QAAQ,WAAYF,EAAOC,GAGlCE,YACLH,EACAC,GAEA,OAAYC,KAAAA,QAAQ,OAAQF,EAAOC,GAG9BC,QACL7B,EACA2B,EACAC,GAEA,WAAOP,GAAiBU,OAA0B,CAChDC,YAAa,CAAEL,MAAAA,EAAOC,OAAAA,GACtBX,IAAQ,GAAA/B,KAAK+B,OAAOjB,MACnBX,KACDkC,EAAI,EAAGC,SAAAA,KAAeA,IAInBS,UACL,OAAOZ,EAAWC,IAAmB,GAAGpC,KAAK+B,YAAY5B,KACvDkC,EAAI,EAAGC,SAAAA,KAAeA,EAASU,OAI5BC,MACLC,EACAC,GAEA,OAAOhB,EAAWiB,QAAuBpD,KAAK+B,kBAAmB,CAC/DzB,KAAM,CAAE4C,MAAAA,EAAOC,SAAAA,KACdhD,KAAKkC,EAAI,EAAGC,SAAAA,MACbtC,KAAKgC,YAAY1B,KAAOgC,EAAShC,KAC1BgC,EAAShC,QAIb+C,SACLH,EACAI,EACAH,GAEA,SAAkBC,QAAuBpD,KAAK+B,YAAa,CACzDzB,KAAM,CAAE4C,MAAAA,EAAOI,SAAAA,EAAUH,SAAAA,KACxBhD,KAAKkC,EAAI,EAAGC,SAAAA,MACbtC,KAAKgC,YAAY1B,KAAOgC,EAAShC,KAC1BgC,EAAShC,UA9DpBmB,EAAA,CADCC,EAAO,IAAM7B,IACsBiC,EAAAF,UAAA,mBAAA,GALzBE,EAAQL,EAAA,CADpBI,KACYC,GCCAyB,MAAb,cACkBC,EAAmB,8BAUnC/C,cACEgD,QADFzD,KAPQgC,wBAGA0B,cAIR,EAAA1D,KAFQ2D,WAKN7C,EAAAA,EAAKd,KAAKgC,aAAaZ,UAAWZ,IAChCR,KAAK2D,MAAQnD,EAAKmD,QAINC,MACdC,EACAC,GAEA,OAAID,EAAQ9B,IAAIgC,WAAW/D,KAAK0D,SAAS3B,MAAQ/B,KAAK2D,QACrCd,OAAOmB,EAAOH,EAAS,CACpCI,QAAcJ,EAAAA,GAAAA,EAAQI,QAAf,CAAwBC,cAAe,SAAWlE,KAAK2D,WAI3DG,EAAQjB,OAAOgB,KAzBxBpC,EAAA,CADCC,EAAO,IAAM7B,IACoB0D,EAAA3B,UAAA,mBAAA,GAGlCH,EAAA,CADCC,EAAO,IAAMI,IACcyB,EAAA3B,UAAA,gBAAA,GAPjB2B,EAAS9B,EAAA,CADrBI,KACY0B,GCDAY,MAAb,cACkBX,EAAoB,kCAAgC/C,eAAA2D,GAAAX,SAAAW,GAAApE,KAG5DgC,iBAH4D,EAAAhC,KAM5DqE,YAESC,EAAAA,KAAAA,QAAkB,kCARiCtE,KAUnDuE,OAAiB,uBAE3B1B,OACL2B,EACAhE,EACAsD,GAEA,GAAI9D,KAAKgC,YAAY1B,MACnB,GAAIN,KAAKuE,OAAOE,KAAKjE,EAAKkE,MACxB,OAASC,EAACH,QAGZ,GAAIxE,KAAKsE,QAAQG,KAAKjE,EAAKkE,MACzB,OAAO1E,KAAKqE,OAAOO,SAAS,SAIhC,OAAcd,EAACjB,OAAOrC,KAxBxBiB,EAAA,CADCC,EAAO,IAAM7B,IACoBsE,EAAAvC,UAAA,mBAAA,GAGlCH,EAAA,CADCC,EAAO,IAAMmD,IACUV,EAAAvC,UAAA,cAAA,GAPbuC,EAAQ1C,EAAA,CADpBI,KACYsC,GCDAW,IAAQA,EAArB,cACkBtB,EAAoB,kCAE7BuB,eAAAA,GAAAA,SAAAA,GAAAA,KAAAA,eAEAlC,OACLmC,EACAxE,EACAsD,GAGE,IAAAmB,EADF,OAAIjF,KAAK+E,UACPE,EAAAjF,KAAK+E,QAAQG,OAAMC,aAAAA,EAAAA,WAAe,iBAClCnF,KAAK+E,QAAQG,MAAME,QAAU,MAEhB,KAAKjF,KAChBY,EAAU,IAAM+C,EAAQjB,OAAOrC,GAAML,KAAKkF,EAAM,MAChDC,EAAS,IAAMtF,KAAK+E,QAASG,MAAME,QAAU,OAI1CtB,EAAQjB,OAAOrC,KApBbsE,EAAQrD,EAAA,CADpBI,KACYiD"}