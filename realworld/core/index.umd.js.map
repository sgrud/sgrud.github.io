{"version":3,"file":"index.umd.js","sources":["../../packages/core/src/store/config.ts","../../packages/core/src/conduit/endpoint.ts","../../packages/core/src/store/user.ts","../../packages/core/src/proxy/auth.ts","../../packages/core/src/proxy/fade.ts","../../packages/core/src/queue/fade.ts"],"sourcesContent":["import { Bus } from '@sgrud/bus';\nimport { Stateful, Store } from '@sgrud/state';\n\n@Stateful(ConfigStore.handle, {\n  apiUrl: 'https://api.realworld.io/api'\n})\nexport class ConfigStore extends Store<ConfigStore> {\n\n  public static readonly handle: Bus.Handle = 'io.github.sgrud.state.config';\n\n  public readonly apiUrl!: string;\n\n}\n","import { Http } from '@sgrud/core';\nimport { first, from, map, Observable, switchMap } from 'rxjs';\nimport { ConfigStore } from '../store/config';\nimport { Article, Articles, Comment, Profile } from './typing';\n\nexport abstract class Endpoint {\n\n  private static get apiUrl(): Observable<string> {\n    return from(new ConfigStore()).pipe(first(), map(({ apiUrl }) => apiUrl));\n  }\n\n  /*\n   * Read Operations\n   */\n\n  public static readArticles({\n    author = undefined,\n    favorited = undefined,\n    limit = 10,\n    offset = 0,\n    path = undefined,\n    tag = undefined\n  }: Partial<Articles> = {}): Observable<Articles> {\n    return this.apiUrl.pipe(\n      switchMap((url) => Http.request<Articles>({\n        queryParams: {\n          ...author && { author },\n          ...favorited && { favorited },\n          ...limit && { limit },\n          ...offset && { offset },\n          ...tag && { tag }\n        },\n        url: `${url}/articles` + (path ? `/${path}` : '')\n      })),\n      map(({ response }) => ({\n        ...response, author, favorited, limit, offset, path, tag\n      }))\n    );\n  }\n\n  public static readArticle(slug: string): Observable<Article> {\n    return this.apiUrl.pipe(\n      map((url) => `${url}/articles/${slug}`),\n      switchMap((url) => Http.get<{ article: Article }>(url)),\n      map(({ response }) => response.article)\n    );\n  }\n\n  public static readComments(slug: string): Observable<Comment[]> {\n    return this.apiUrl.pipe(\n      map((url) => `${url}/articles/${slug}/comments`),\n      switchMap((url) => Http.get<{ comments: Comment[] }>(url)),\n      map(({ response }) => response.comments)\n    );\n  }\n\n  public static readProfile(username: string): Observable<Profile> {\n    return this.apiUrl.pipe(\n      map((url) => `${url}/profiles/${username}`),\n      switchMap((url) => Http.get<{ profile: Profile }>(url)),\n      map(({ response }) => response.profile)\n    );\n  }\n\n  public static readTags(): Observable<string[]> {\n    return this.apiUrl.pipe(\n      map((url) => `${url}/tags`),\n      switchMap((url) => Http.get<{ tags: string[] }>(url)),\n      map(({ response }) => response.tags)\n    );\n  }\n\n  /*\n   * Remove Operations\n   */\n\n  public static removeArticle(\n    article: Article\n  ): Observable<unknown> {\n    return this.apiUrl.pipe(\n      map((url) => `${url}/articles/${article.slug}`),\n      switchMap((url) => Http.delete<unknown>(url)),\n      map(({ response }) => response)\n    );\n  }\n\n  public static removeComment(\n    article: Article,\n    comment: Comment\n  ): Observable<unknown> {\n    return this.apiUrl.pipe(\n      map((url) => `${url}/articles/${article.slug}/comments/${comment.id}`),\n      switchMap((url) => Http.delete<unknown>(url)),\n      map(({ response }) => response)\n    );\n  }\n\n  /*\n   * Update Operations\n   */\n\n  public static updateArticle(\n    article: Partial<Article>\n  ): Observable<Article> {\n    return this.apiUrl.pipe(\n      switchMap((url) => Http.request<{ article: Article }>({\n        body: { article },\n        method: article.slug ? 'PUT' : 'POST',\n        url: `${url}/articles` + (article.slug ? `/${article.slug}` : '')\n      })),\n      map(({ response }) => response.article)\n    );\n  }\n\n  public static updateComment(\n    article: Article,\n    comment: Partial<Comment>\n  ): Observable<Comment> {\n    return this.apiUrl.pipe(\n      switchMap((url) => Http.request<{ comment: Comment }>({\n        body: { comment },\n        method: 'POST',\n        url: `${url}/articles/${article.slug}/comments`\n      })),\n      map(({ response }) => response.comment)\n    );\n  }\n\n  public static updateFollow(\n    profile: Profile\n  ): Observable<Profile> {\n    return this.apiUrl.pipe(\n      switchMap((url) => Http.request<{ profile: Profile }>({\n        method: profile.following ? 'DELETE' : 'POST',\n        url: `${url}/profiles/${profile.username}/follow`\n      })),\n      map(({ response }) => response.profile)\n    );\n  }\n\n  public static updateLike(\n    article: Article\n  ): Observable<Article> {\n    return this.apiUrl.pipe(\n      switchMap((url) => Http.request<{ article: Article }>({\n        method: article.favorited ? 'DELETE' : 'POST',\n        url: `${url}/articles/${article.slug}/favorite`\n      })),\n      map(({ response }) => response.article)\n    );\n  }\n\n  /*\n   * Instance Invalidation\n   */\n\n  private constructor() {\n    throw new TypeError('Endpoint.constructor');\n  }\n\n}\n","import { Bus } from '@sgrud/bus';\nimport { Stateful, Store } from '@sgrud/state';\nimport { User } from '../conduit/typing';\nimport { ConfigStore } from './config';\n\n@Stateful(UserStore.handle, {\n  bio: undefined,\n  email: undefined,\n  image: undefined,\n  token: undefined,\n  username: undefined\n})\nexport class UserStore extends Store<UserStore> {\n\n  public static readonly handle: Bus.Handle = 'io.github.sgrud.state.user';\n\n  public readonly bio?: string | undefined;\n\n  public readonly email?: string | undefined;\n\n  public readonly image?: string | undefined;\n\n  public readonly token?: string | undefined;\n\n  public readonly username?: string | undefined;\n\n  public async login(\n    email: string,\n    password: string\n  ): Promise<Store.State<this>> {\n    const { fetch, state } = sgrud.state.effects;\n    const config = (await state<ConfigStore>('io.github.sgrud.state.config'))!;\n\n    const response = await fetch(`${config.apiUrl}/users/login`, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email,\n          password\n        }\n      })\n    });\n\n    if (!response.ok) {\n      throw await response.json();\n    }\n\n    const { user: next } = await response.json();\n    return Object.assign({}, this, next);\n  }\n\n  public async logout(): Promise<Store.State<this>> {\n    const next = {\n      bio: undefined,\n      email: undefined,\n      image: undefined,\n      password: undefined,\n      token: undefined,\n      username: undefined\n    };\n\n    return Object.assign({}, this, next);\n  }\n\n  public async register(\n    email: string,\n    username: string,\n    password: string\n  ): Promise<Store.State<this>> {\n    const { fetch, state } = sgrud.state.effects;\n    const config = (await state<ConfigStore>('io.github.sgrud.state.config'))!;\n\n    const response = await fetch(`${config.apiUrl}/users`, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email,\n          username,\n          password\n        }\n      })\n    });\n\n    if (!response.ok) {\n      throw await response.json();\n    }\n\n    const { user: next } = await response.json();\n    return Object.assign({}, this, next);\n  }\n\n  public async update(user: Partial<User>): Promise<Store.State<this>> {\n    const { fetch, state } = sgrud.state.effects;\n    const config = (await state<ConfigStore>('io.github.sgrud.state.config'))!;\n\n    const response = await fetch(`${config.apiUrl}/user`, {\n      method: 'PUT',\n      headers: {\n        'accept': 'application/json',\n        'authorization': `Token ${this.token!}`,\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    });\n\n    if (!response.ok) {\n      throw await response.json();\n    }\n\n    const { user: next } = await response.json();\n    return Object.assign({}, this, next);\n  }\n\n}\n","import { assign, Factor, Http, Provider, Proxy, Target } from '@sgrud/core';\nimport { StateHandler, Store } from '@sgrud/state';\nimport { first, forkJoin, from, Observable, race, switchMap, timer } from 'rxjs';\nimport { ConfigStore } from '../store/config';\nimport { UserStore } from '../store/user';\n\n@Target()\nexport class UserProxy\n  extends Provider<typeof Proxy>('sgrud.core.Proxy') {\n\n  @Factor(() => ConfigStore)\n  private readonly configStore!: Store<ConfigStore>;\n\n  @Factor(() => UserStore)\n  private readonly userStore!: Store<UserStore>;\n\n  public override handle<T>(\n    request: Http.Request,\n    handler: Http.Handler\n  ): Observable<Http.Response<T>> {\n    return race(StateHandler, timer(0)).pipe(switchMap((stateHandler) => {\n      if (stateHandler instanceof StateHandler) {\n        return forkJoin({\n          configState: from(this.configStore).pipe(first()),\n          userState: from(this.userStore).pipe(first())\n        }).pipe(switchMap(({ configState, userState }) => {\n          if (request.url.startsWith(configState.apiUrl) && userState.token) {\n            assign(request, {\n              headers: {\n                authorization: `Token ${userState.token}`\n              }\n            });\n          }\n\n          return handler.handle(request);\n        }));\n      }\n\n      return handler.handle(request);\n    }));\n  }\n\n}\n","import { Target, Transit } from '@sgrud/core';\nimport { from } from 'rxjs';\n\n@Target([], Transit)\nexport class FadeProxy extends Transit {\n\n  public constructor() {\n    super();\n\n    document.documentElement.style.transition = '250ms filter';\n\n    from(this).subscribe(({ length }) => {\n      document.documentElement.style.filter = `grayscale(${length ? 1 : 0})`;\n      document.documentElement.style.pointerEvents = length ? 'none' : 'auto';\n    });\n  }\n\n}\n","import { Provider, Target } from '@sgrud/core';\nimport { Queue, Router } from '@sgrud/shell';\nimport { delay, finalize, Observable, switchMap, timer } from 'rxjs';\n\n@Target()\nexport class FadeQueue\n  extends Provider<typeof Queue>('sgrud.shell.Queue') {\n\n  public element?: HTMLElement | undefined;\n\n  public override handle(\n    _prev: Router.State,\n    next: Router.State,\n    queue: Router.Queue\n  ): Observable<Router.State> {\n    if (this.element) {\n      this.element.style.transition ||= 'opacity 100ms';\n      this.element.style.opacity = '0';\n\n      return timer(100).pipe(\n        switchMap(() => queue.handle(next).pipe(delay(100))),\n        finalize(() => this.element!.style.opacity = '1')\n      );\n    }\n\n    return queue.handle(next);\n  }\n\n}\n"],"names":["ConfigStore","_class","_Store","_len","_this","arguments","length","args","Array","_key","call","apply","concat","apiUrl","_inheritsLoose","Store","handle","__decorate","Stateful","Endpoint","TypeError","readArticles","_temp","_ref","_ref$author","author","undefined","_ref$favorited","favorited","_ref$limit","limit","_ref$offset","offset","_ref$path","path","_ref$tag","tag","this","pipe","switchMap","url","Http","request","queryParams","_extends","map","_ref2","response","readArticle","slug","get","_ref3","article","readComments","_ref4","comments","readProfile","username","_ref5","profile","readTags","_ref6","tags","removeArticle","_ref7","removeComment","comment","id","_ref8","updateArticle","body","method","_ref9","updateComment","_ref10","updateFollow","following","_ref11","updateLike","_ref12","_createClass","key","from","first","_ref13","UserStore","bio","email","image","token","_proto","prototype","login","password","_this2","_sgrud$state$effects","sgrud","state","effects","fetch","Promise","resolve","then","config","headers","accept","JSON","stringify","user","_temp2","_result","_exit","json","Object","assign","ok","_response$json","e","reject","logout","register","_this4","_sgrud$state$effects2","_temp4","_result2","_temp3","_response$json2","update","_this5","_sgrud$state$effects3","authorization","_temp6","_result3","_temp5","_response$json3","UserProxy","_Provider","configStore","userStore","handler","race","StateHandler","timer","stateHandler","forkJoin","configState","userState","startsWith","Provider","Factor","Target","exports","FadeProxy","_Transit","document","documentElement","style","transition","_assertThisInitialized","subscribe","filter","pointerEvents","Transit","FadeQueue","element","_prev","next","queue","_this$element$style","opacity","delay","finalize"],"mappings":"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"}