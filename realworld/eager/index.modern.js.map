{"version":3,"file":"index.modern.js","sources":["../../packages/eager/src/fragment/article/comment.tsx","../../packages/eager/src/fragment/article/meta.tsx","../../packages/eager/src/fragment/article/tags.tsx","../../packages/eager/src/fragment/button/delete.tsx","../../packages/eager/src/fragment/button/edit.tsx","../../packages/eager/src/fragment/button/follow.tsx","../../packages/eager/src/fragment/button/like.tsx","../../packages/eager/src/component/article.tsx","../../packages/eager/src/component/error.tsx","../../packages/eager/src/component/footer.tsx","../../packages/eager/src/component/header.tsx","../../packages/eager/src/fragment/article/pager.tsx","../../packages/eager/src/fragment/article/preview.tsx","../../packages/eager/src/fragment/article/list.tsx","../../packages/eager/src/component/home.tsx","../../packages/eager/src/fragment/error/messages.tsx","../../packages/eager/src/component/login.tsx","../../packages/eager/src/component/profile.tsx","../../packages/eager/src/component/register.tsx","../../packages/eager/src/component/app.tsx"],"sourcesContent":["import { Comment } from 'sgrud-realworld-core';\n\nexport function ArticleComment(props: {\n  children?: JSX.Element[] | undefined;\n  comment: Comment;\n}): JSX.Element {\n  const { children } = props;\n  const { body, createdAt } = props.comment;\n  const { image, username } = props.comment.author;\n  const href = `/profile/${username}`;\n\n  return <>\n    <div className=\"card\">\n      <div className=\"card-block\">\n        <p className=\"card-text\">{body}</p>\n      </div>\n      <div className=\"card-footer\">\n        <a className=\"comment-author\" href={href} is=\"router-link\">\n          <img className=\"comment-author-img\" src={image}/>\n        </a>\n        {' '}\n        <a className=\"comment-author\" href={href} is=\"router-link\">\n          {username}\n        </a>\n        <span className=\"date-posted\">\n          {new Date(createdAt).toLocaleString()}\n        </span>\n        {children}\n      </div>\n    </div>\n  </>;\n}\n","import { Article } from 'sgrud-realworld-core';\n\nexport function ArticleMeta(props: {\n  article: Article;\n  children?: JSX.Element[] | undefined;\n}): JSX.Element {\n  const { children } = props;\n  const { image, username } = props.article.author;\n  const createdAt = new Date(props.article.createdAt).toLocaleString();\n  const href = `/profile/${username}`;\n\n  return <>\n    <div className=\"article-meta\">\n      <a href={href} is=\"router-link\"><img src={image}/></a>\n      <div className=\"info\">\n        <a className=\"author\" href={href} is=\"router-link\">{username}</a>\n        <span className=\"date\">{createdAt}</span>\n      </div>\n      {children}\n    </div>\n  </>;\n}\n","export function ArticleTags(props: {\n  tagList: string[];\n}): JSX.Element {\n  const { tagList } = props;\n\n  return <>\n    {tagList.length > 0 && <>\n      <ul className=\"tag-list\">\n        {tagList.map((tag) => <>\n          <li className=\"tag-default tag-outline tag-pill\">{tag}</li>\n        </>)}\n      </ul>\n    </>}\n  </>;\n}\n","import { Article } from 'sgrud-realworld-core';\n\nexport function DeleteButton(props: {\n  article: Article;\n  className?: string | undefined;\n  ondelete: (article: Article) => void;\n}): JSX.Element {\n  const { article, ondelete } = props;\n  const onclick = ondelete.bind(undefined, article);\n  let className = 'btn btn-sm btn-outline-danger';\n\n  if (props.className) {\n    className += ` ${props.className}`;\n  }\n\n  return <>\n    <button className={className} onclick={onclick} type=\"button\">\n      <i className=\"ion-trash-a\"></i> Delete Article\n    </button>\n  </>;\n}\n","import { Article } from 'sgrud-realworld-core';\n\nexport function EditButton(props: {\n  article: Article;\n  className?: string | undefined;\n}): JSX.Element {\n  const { slug } = props.article;\n  let className = 'btn btn-sm btn-outline-secondary';\n\n  if (props.className) {\n    className += ` ${props.className}`;\n  }\n\n  return <>\n    <a className={className} href={`/editor/${slug}`} is=\"router-link\">\n      <i className=\"ion-edit\"></i> Edit Article\n    </a>\n  </>;\n}\n","import { Profile } from 'sgrud-realworld-core';\n\nexport function FollowButton(props: {\n  children?: JSX.Element[] | undefined;\n  className?: string | undefined;\n  onfollow: (profile: Profile) => void;\n  profile: Profile;\n}): JSX.Element {\n  const { onfollow, profile } = props;\n  const { username, following } = profile;\n  const onclick = onfollow.bind(undefined, profile);\n  let className = `btn btn-sm btn${following ? '-' : '-outline-'}secondary`;\n\n  if (props.className) {\n    className += ` ${props.className}`;\n  }\n\n  return <>\n    <button className={className} onclick={onclick} type=\"button\">\n      <i className=\"ion-plus-round\"></i>{' '}\n      {following ? 'Unfollow' : 'Follow'} {username}\n    </button>\n  </>;\n}\n","import { Article } from 'sgrud-realworld-core';\n\nexport function LikeButton(props: {\n  article: Article;\n  children?: JSX.Element[] | undefined;\n  className?: string | undefined;\n  onlike: (article: Article) => void;\n}): JSX.Element {\n  const { article, children, onlike } = props;\n  const { favorited } = article;\n  const onclick = onlike.bind(undefined, article);\n  let className = `btn btn-sm btn${favorited ? '-' : '-outline-'}primary`;\n\n  if (props.className) {\n    className += ` ${props.className}`;\n  }\n\n  return <>\n    <button className={className} onclick={onclick} type=\"button\">\n      <i className=\"ion-heart\"></i> {children}\n    </button>\n  </>;\n}\n","import { assign, Factor } from '@sgrud/core';\nimport { Component, Fluctuate, html, Reference, Resolve, Route, Router } from '@sgrud/shell';\nimport { Store } from '@sgrud/state';\nimport { marked } from 'marked';\nimport { Article, Comment, Endpoint, UserStore } from 'sgrud-realworld-core';\nimport { ArticleComment } from '../fragment/article/comment';\nimport { ArticleMeta } from '../fragment/article/meta';\nimport { ArticleTags } from '../fragment/article/tags';\nimport { DeleteButton } from '../fragment/button/delete';\nimport { EditButton } from '../fragment/button/edit';\nimport { FollowButton } from '../fragment/button/follow';\nimport { LikeButton } from '../fragment/button/like';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'article-component': ArticleComponent;\n  }\n}\n\n@Route({\n  path: 'article/:slug'\n})\n@Component('article-component')\nexport class ArticleComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Fluctuate(() => new UserStore())\n  private readonly userState?: Store.State<UserStore> | undefined;\n\n  @Reference('form', ['input'])\n  private readonly form?: HTMLFormElement | undefined;\n\n  @Resolve<'article/:slug'>(({ params }) => Endpoint.readArticle(params.slug))\n  private readonly article!: Article;\n\n  @Resolve<'article/:slug'>(({ params }) => Endpoint.readComments(params.slug))\n  private readonly comments!: Comment[];\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"article-page\">\n        <div className=\"banner\">\n          <div className=\"container\">\n            <h1>{this.article.title}</h1>\n            <ArticleMeta article={this.article}>\n              {this.article.author.username === this.userState?.username ? <>\n                <EditButton article={this.article}/>\n                {' '}\n                <DeleteButton\n                  article={this.article}\n                  ondelete={() => this.removeArticle()}>\n                </DeleteButton>\n              </> : <>\n                <FollowButton\n                  profile={this.article.author}\n                  onfollow={() => this.updateFollow()}>\n                </FollowButton>\n                {' '}\n                <LikeButton\n                  article={this.article}\n                  onlike={() => this.updateLike()}>\n                  {this.article.favorited && this.userState?.token\n                    ? 'Unfavorite' : 'Favorite'} Article{' '}\n                  <span className=\"counter\">\n                    ({this.article.favoritesCount})\n                  </span>\n                </LikeButton>\n              </>}\n            </ArticleMeta>\n          </div>\n        </div>\n        <div className=\"container page\">\n          <div className=\"row article-content\">\n            <div className=\"col-md-12\">\n              <div>{html(marked(this.article.body))}</div>\n              <ArticleTags tagList={this.article.tagList}/>\n            </div>\n          </div>\n          <hr/>\n          <div className=\"article-actions\">\n            <ArticleMeta article={this.article}>\n              {this.article.author.username === this.userState?.username ? <>\n                <EditButton article={this.article}/>\n                {' '}\n                <DeleteButton\n                  article={this.article}\n                  ondelete={() => this.removeArticle()}>\n                </DeleteButton>\n              </> : <>\n                <FollowButton\n                  profile={this.article.author}\n                  onfollow={() => this.updateFollow()}>\n                </FollowButton>\n                {' '}\n                <LikeButton\n                  article={this.article}\n                  onlike={() => this.updateLike()}>\n                  {this.article.favorited && this.userState?.token\n                    ? 'Unfavorite' : 'Favorite'} Article{' '}\n                  <span className=\"counter\">\n                    ({this.article.favoritesCount})\n                  </span>\n                </LikeButton>\n              </>}\n            </ArticleMeta>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8 col-xs-12 offset-md-2\">\n              {this.userState?.token ? <>\n                <form className=\"card comment-form\" key=\"form\">\n                  <div className=\"card-block\">\n                    <textarea\n                      className=\"form-control\"\n                      name=\"body\"\n                      placeholder=\"Write a comment...\"\n                      required={true}\n                      rows={3}>\n                    </textarea>\n                  </div>\n                  <div className=\"card-footer\">\n                    <img\n                      className=\"comment-author-img\"\n                      src={this.userState.image!}/>\n                    <button\n                      className=\"btn btn-sm btn-primary\"\n                      disabled={!this.form?.checkValidity() || undefined!}\n                      onclick={() => this.updateComment()}\n                      type=\"button\">\n                      Post Comment\n                    </button>\n                  </div>\n                </form>\n              </> : <>\n                <a href=\"/login\" is=\"router-link\">Sign in</a> or{' '}\n                <a href=\"/register\" is=\"router-link\">sign up</a>{' '}\n                to add comments on this article.\n              </>}\n              {this.comments.map((comment) => <>\n                <ArticleComment comment={comment}>\n                  {comment.author.username === this.userState?.username && <>\n                    <span className=\"mod-options\">\n                      <i className=\"ion-trash-a\" onclick={() => {\n                        this.removeComment(comment);\n                      }}>\n                      </i>\n                    </span>\n                  </>}\n                </ArticleComment>\n              </>)}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  private removeArticle(this: this & Component): void {\n    Endpoint.removeArticle(this.article).subscribe(() => {\n      this.router.navigate(`/profile/${this.userState!.username!}`).subscribe();\n    });\n  }\n\n  private removeComment(this: this & Component, comment: Comment): void {\n    Endpoint.removeComment(this.article, comment).subscribe(() => {\n      this.comments.splice(this.comments.indexOf(comment), 1);\n      this.renderComponent!();\n    });\n  }\n\n  private updateComment(this: this & Component): void {\n    const formData = new FormData(this.form);\n\n    Endpoint.updateComment(this.article, {\n      body: formData.get('body')!.toString()\n    }).subscribe((next) => {\n      this.comments.unshift(next);\n      this.renderComponent!();\n      this.form?.reset();\n    });\n  }\n\n  private updateFollow(this: this & Component): void {\n    if (this.userState?.token) {\n      Endpoint.updateFollow(this.article.author).subscribe((next) => {\n        assign(this.article.author, next);\n        this.renderComponent!();\n      });\n    } else {\n      this.router.navigate('/login').subscribe();\n    }\n  }\n\n  private updateLike(this: this & Component): void {\n    if (this.userState?.token) {\n      Endpoint.updateLike(this.article).subscribe((next) => {\n        assign(this.article, next);\n        this.renderComponent!();\n      });\n    } else {\n      this.router.navigate('/login').subscribe();\n    }\n  }\n\n}\n","import { Catch, Component, Route } from '@sgrud/shell';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'error-component': ErrorComponent;\n  }\n}\n\n@Route({\n  path: 'error'\n})\n@Component('error-component')\nexport class ErrorComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Catch()\n  private readonly error?: Error | undefined;\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"home-page\">\n        <div className=\"banner\" style={{ background: '#b85c5c' }}>\n          <div className=\"container\">\n            <h1 className=\"logo-font\">error</h1>\n            <p><strong>{this.error!.name}</strong>: {this.error!.message}</p>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  public connectedCallback(this: this & Component): void {\n    if (this.error) {\n      console.error(this.error);\n      this.renderComponent!();\n    }\n  }\n\n}\n","import { Component } from '@sgrud/shell';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'footer-component': FooterComponent;\n  }\n}\n\n@Component('footer-component')\nexport class FooterComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  public get template(): JSX.Element {\n    return <>\n      <footer>\n        <div className=\"container\">\n          <a className=\"logo-font\" href=\"/\" is=\"router-link\">conduit</a>\n          <span className=\"attribution\">\n            © {new Date().getFullYear()}.\n            An interactive learning project from{' '}\n            <a href=\"https://thinkster.io\">Thinkster</a>.\n            Code licensed under MIT.\n          </span>\n        </div>\n      </footer>\n    </>;\n  }\n\n}\n","import { Factor } from '@sgrud/core';\nimport { Component, Fluctuate, Router } from '@sgrud/shell';\nimport { Store } from '@sgrud/state';\nimport { UserStore } from 'sgrud-realworld-core';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'header-component': HeaderComponent;\n  }\n}\n\n@Component('header-component')\nexport class HeaderComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Fluctuate(() => new Router())\n  private readonly routerState?: Router.State | undefined;\n\n  @Fluctuate(() => new UserStore())\n  private readonly userState?: Store.State<UserStore> | undefined;\n\n  public get template(): JSX.Element {\n    return <>\n      <nav className=\"navbar navbar-light\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"/\" is=\"router-link\">conduit</a>\n          <ul className=\"nav navbar-nav pull-xs-right\">\n            <li className=\"nav-item\"><a {...this.navLink()}>Home</a></li>\n            {this.userState?.token ? <>\n              <li className=\"nav-item\">\n                <a {...this.navLink('editor')}>\n                  <i className=\"ion-compose\"></i> New Article\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a {...this.navLink('settings')}>\n                  <i className=\"ion-gear-a\"></i> Settings\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a {...this.navLink('profile', this.userState.username!)}>\n                  <img className=\"user-pic\" src={this.userState.image!}/>\n                  {this.userState.username}\n                </a>\n              </li>\n            </> : <>\n              <li className=\"nav-item\">\n                <a {...this.navLink('login')}>Sign in</a>\n              </li>\n              <li className=\"nav-item\">\n                <a {...this.navLink('register')}>Sign up</a>\n              </li>\n            </>}\n          </ul>\n        </div>\n      </nav>\n    </>;\n  }\n\n  private navLink(...parts: string[]): HTMLAnchorElement {\n    const props = {\n      className: 'nav-link',\n      href: `/${parts.join('/')}`,\n      is: 'router-link'\n    };\n\n    if (this.routerState?.path === this.router.rebase(props.href, false)) {\n      props.className += ' active';\n    }\n\n    return props as unknown as HTMLAnchorElement;\n  }\n\n}\n","export function ArticlePager(props: {\n  count: number;\n  limit: number;\n  offset: number;\n  onoffset: (offset: number) => void;\n}): JSX.Element {\n  const { count, limit, offset, onoffset } = props;\n  const page = Math.floor(offset / limit) + 1;\n  const pages = Math.ceil(count / limit);\n\n  return <>\n    <nav>\n      <ul className=\"pagination\">\n        {new Array(pages).fill(null).map((_, index) => <>\n          <li className={`page-item ${index + 1 === page ? 'active' : ''}`}>\n            <a className=\"page-link\" href=\"#\" onclick={(event) => {\n              onoffset(index * limit);\n              event.preventDefault();\n            }}>{index + 1}</a>\n          </li>\n        </>)}\n      </ul>\n    </nav>\n  </>;\n}\n","import { Article } from 'sgrud-realworld-core';\nimport { LikeButton } from '../button/like';\nimport { ArticleMeta } from './meta';\nimport { ArticleTags } from './tags';\n\nexport function ArticlePreview(props: {\n  article: Article;\n  onlike: (article: Article) => void;\n}): JSX.Element {\n  const { article, onlike } = props;\n  const { description, favoritesCount, slug, tagList, title } = article;\n\n  return <>\n    <div className=\"article-preview\">\n      <ArticleMeta article={article}>\n        <LikeButton\n          article={article}\n          className=\"pull-xs-right\"\n          onlike={onlike}>\n          {favoritesCount}\n        </LikeButton>\n      </ArticleMeta>\n      <a className=\"preview-link\" href={`/article/${slug}`} is=\"router-link\">\n        <h1>{title}</h1>\n        <p>{description}</p>\n        <span>Read more...</span>\n        <ArticleTags tagList={tagList}/>\n      </a>\n    </div>\n  </>;\n}\n","import { Article, Articles } from 'sgrud-realworld-core';\nimport { ArticlePager } from './pager';\nimport { ArticlePreview } from './preview';\n\nexport function ArticleList(props: Articles & {\n  onlike: (article: Article) => void;\n  onoffset: (offset: number) => void;\n}): JSX.Element {\n  const { articles, articlesCount, limit, offset, onlike, onoffset } = props;\n\n  return articlesCount ? <>\n    {articles.map((article) => <>\n      <ArticlePreview\n        article={article}\n        onlike={onlike}>\n      </ArticlePreview>\n    </>)}\n    {articles.length < articlesCount && <>\n      <ArticlePager\n        count={articlesCount}\n        limit={limit}\n        offset={offset}\n        onoffset={onoffset}>\n      </ArticlePager>\n    </>}\n  </> : <>\n    <div className=\"article-preview\">\n      No articles are here... yet.\n    </div>\n  </>;\n}\n","import { Factor } from '@sgrud/core';\nimport { Component, Fluctuate, Resolve, Route, Router } from '@sgrud/shell';\nimport { Store } from '@sgrud/state';\nimport { Article, Articles, Endpoint, UserStore } from 'sgrud-realworld-core';\nimport { ArticleList } from '../fragment/article/list';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'home-component': HomeComponent;\n  }\n}\n\n@Route({\n  path: ''\n})\n@Component('home-component')\nexport class HomeComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Fluctuate(() => new UserStore())\n  private readonly userState?: Store.State<UserStore> | undefined;\n\n  @Resolve(() => Endpoint.readArticles())\n  private articles!: Articles;\n\n  @Resolve(() => Endpoint.readTags())\n  private readonly tagList!: string[];\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"home-page\">\n        <div className=\"banner\">\n          <div className=\"container\">\n            <h1 className=\"logo-font\">conduit</h1>\n            <p>A place to share your <i>SGRUD</i> knowledge.</p>\n          </div>\n        </div>\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-9\">\n              <div className=\"feed-toggle\">\n                <ul className=\"nav nav-pills outline-active\">\n                  {this.userState?.token && <>\n                    <li className=\"nav-item\">\n                      <a {...this.navLink({\n                        path: 'feed',\n                        tag: undefined\n                      })}>Your Feed</a>\n                    </li>\n                  </>}\n                  <li className=\"nav-item\">\n                    <a {...this.navLink({\n                      path: undefined,\n                      tag: undefined\n                    })}>Global Feed</a>\n                  </li>\n                  {this.articles.tag && <>\n                    <li className=\"nav-item\">\n                      <a {...this.navLink({\n                        path: undefined,\n                        tag: this.articles.tag\n                      })}><i className=\"ion-pound\"></i> {this.articles.tag}</a>\n                    </li>\n                  </>}\n                </ul>\n              </div>\n              <ArticleList {...this.articles}\n                onlike={(article) => this.updateLike(article)}\n                onoffset={(offset) => this.readArticles({ offset })}>\n              </ArticleList>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"sidebar\">\n                <p>Popular Tags</p>\n                {this.tagList.length > 0 ? <>\n                  <div className=\"tag-list\">\n                    {this.tagList.map((tag) => <>\n                      <a {...this.navPill(tag)}>{tag}</a>\n                    </>)}\n                  </div>\n                </> : <>\n                  <div>No tags are here... yet.</div>\n                </>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  private navLink(params: Partial<Articles>): HTMLAnchorElement {\n    const props = {\n      className: 'nav-link',\n      href: '#',\n      onclick: (event: MouseEvent) => {\n        this.readArticles({ ...params, offset: 0 });\n        event.preventDefault();\n      }\n    };\n\n    if (Object.keys(params).every((key) => {\n      // @ts-expect-error type casting nightmare\n      return params[key] === this.articles?.[key];\n    })) {\n      props.className += ' active';\n    }\n\n    return props as HTMLAnchorElement;\n  }\n\n  private navPill(tag: string): HTMLAnchorElement {\n    const props = {\n      className: 'tag-pill tag-default',\n      href: '#',\n      onclick: (event: MouseEvent) => {\n        this.readArticles({ offset: 0, path: undefined, tag });\n        event.preventDefault();\n      }\n    };\n\n    if (tag === this.articles.tag) {\n      props.className += ' active';\n    }\n\n    return props as HTMLAnchorElement;\n  }\n\n  private readArticles(\n    this: this & Component,\n    params: Partial<Articles>\n  ): void {\n    const { offset, path, tag } = this.articles;\n\n    Endpoint.readArticles({\n      offset, path, tag, ...params\n    }).subscribe((next) => {\n      this.articles = next;\n      this.renderComponent!();\n    });\n  }\n\n  private updateLike(this: this & Component, article: Article): void {\n    if (this.userState?.token) {\n      Endpoint.updateLike(article).subscribe((next) => {\n        const index = this.articles.articles.indexOf(article);\n        this.articles.articles.splice(index, 1, next);\n        this.renderComponent!();\n      });\n    } else {\n      this.router.navigate('/login').subscribe();\n    }\n  }\n\n}\n","import { Errors } from 'sgrud-realworld-core';\n\nexport function ErrorMessages(props: {\n  errors?: Errors | undefined;\n}): JSX.Element {\n  const { errors } = props;\n\n  return <>\n    {errors && <>\n      <ul className=\"error-messages\">\n        {Object.keys(errors).map((key) => errors[key].map((message) => <>\n          <li>{key} {message}</li>\n        </>))}\n      </ul>\n    </>}\n  </>;\n}\n","import { Factor } from '@sgrud/core';\nimport { Component, Reference, Route, Router } from '@sgrud/shell';\nimport { Store } from '@sgrud/state';\nimport { Errors, UserStore } from 'sgrud-realworld-core';\nimport { ErrorMessages } from '../fragment/error/messages';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'login-component': LoginComponent;\n  }\n}\n\n@Route({\n  path: 'login'\n})\n@Component('login-component')\nexport class LoginComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Factor(() => UserStore)\n  private readonly store!: Store<UserStore>;\n\n  @Reference('form', ['input'])\n  private readonly form?: HTMLFormElement | undefined;\n\n  private errors?: Errors | undefined;\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"auth-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-xs-12 offset-md-3\">\n              <h1 className=\"text-xs-center\">Sign in</h1>\n              <p className=\"text-xs-center\">\n                <a href=\"/register\" is=\"router-link\">Need an account?</a>\n              </p>\n              <ErrorMessages errors={this.errors}/>\n              <form key=\"form\">\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    name=\"email\"\n                    pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$\"\n                    placeholder=\"Email\"\n                    required={true}\n                    type=\"email\"/>\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    name=\"password\"\n                    pattern=\"^.{8,}$\"\n                    placeholder=\"Password\"\n                    required={true}\n                    type=\"password\"/>\n                </fieldset>\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  disabled={!this.form?.checkValidity() || undefined!}\n                  onclick={() => this.dispatchLogin()}\n                  type=\"button\">\n                  Sign in\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  private dispatchLogin(this: this & Component): void {\n    const formData = new FormData(this.form);\n\n    if (this.errors) {\n      this.errors = undefined;\n      this.renderComponent!();\n    }\n\n    this.store.dispatch('login', [\n      formData.get('email')!.toString(),\n      formData.get('password')!.toString()\n    ]).subscribe({\n      error: ({ errors }: { errors: Errors }) => {\n        this.errors = errors;\n        this.renderComponent!();\n      },\n      next: ({ username }) => this.router.navigate(\n        `/profile/${username!}`\n      ).subscribe()\n    });\n  }\n\n}\n","import { assign, Factor } from '@sgrud/core';\nimport { Component, Fluctuate, Resolve, Route, Router } from '@sgrud/shell';\nimport { Store } from '@sgrud/state';\nimport { first, from, of, switchMap } from 'rxjs';\nimport { Article, Articles, Endpoint, Profile, UserStore } from 'sgrud-realworld-core';\nimport { ArticleList } from '../fragment/article/list';\nimport { FollowButton } from '../fragment/button/follow';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'profile-component': ProfileComponent;\n  }\n}\n\n@Route({\n  path: 'profile/:username/:favorites?'\n})\n@Component('profile-component')\nexport class ProfileComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Fluctuate(() => new Router())\n  private readonly routerState?: Router.State | undefined;\n\n  @Fluctuate(() => new UserStore())\n  private readonly userState?: Store.State<UserStore> | undefined;\n\n  @Resolve<'profile/:username/:favorites?'>(({ params }) => {\n    return Endpoint.readArticles({\n      [params.favorites ? 'favorited' : 'author']: params.username\n    });\n  })\n  private articles!: Articles;\n\n  @Resolve<'profile/:username/:favorites?'>(({ params }) => {\n    return from(new UserStore()).pipe(first(), switchMap((userState) => {\n      return params.username !== userState.username\n        ? Endpoint.readProfile(params.username)\n        : of(userState);\n    }));\n  })\n  private readonly profile!: Profile;\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"profile-page\">\n        <div className=\"user-info\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-10 col-xs-12 offset-md-1\">\n                <img className=\"user-img\" src={this.profile.image}/>\n                <h4>{this.profile.username}</h4>\n                <p>{this.profile.bio}</p>\n                {this.profile.username === this.userState?.username ? <>\n                  <a\n                    className=\"btn btn-sm btn-outline-secondary action-btn\"\n                    href=\"/settings\"\n                    is=\"router-link\">\n                    <i className=\"ion-gear-a\"></i> Edit Profile Settings\n                  </a>\n                </> : <>\n                  <FollowButton\n                    className=\"action-btn\"\n                    onfollow={() => this.updateFollow()}\n                    profile={this.profile}>\n                  </FollowButton>\n                </>}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-10 col-xs-12 offset-md-1\">\n              <div className=\"articles-toggle\">\n                <ul className=\"nav nav-pills outline-active\">\n                  <li className=\"nav-item\">\n                    <a {...this.navLink()}>My Articles</a>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a {...this.navLink('favorites')}>Favorited Articles</a>\n                  </li>\n                </ul>\n              </div>\n              <ArticleList {...this.articles}\n                onlike={(article) => this.updateLike(article)}\n                onoffset={(offset) => this.readArticles({ offset })}>\n              </ArticleList>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  private navLink(...parts: string[]): HTMLAnchorElement {\n    const props = {\n      className: 'nav-link',\n      href: `/profile/${[this.profile.username].concat(parts).join('/')}`,\n      is: 'router-link'\n    };\n\n    if (this.routerState?.path === this.router.rebase(props.href, false)) {\n      props.className += ' active';\n    }\n\n    return props as unknown as HTMLAnchorElement;\n  }\n\n  private readArticles(\n    this: this & Component,\n    params: Partial<Articles>\n  ): void {\n    const { author, favorited, offset } = this.articles;\n\n    Endpoint.readArticles({\n      author, favorited, offset, ...params\n    }).subscribe((next) => {\n      this.articles = next;\n      this.renderComponent!();\n    });\n  }\n\n  private updateFollow(this: this & Component): void {\n    if (this.userState?.token) {\n      Endpoint.updateFollow(this.profile).subscribe((next) => {\n        assign(this.profile, next);\n        this.renderComponent!();\n      });\n    } else {\n      this.router.navigate('/login').subscribe();\n    }\n  }\n\n  private updateLike(this: this & Component, article: Article): void {\n    if (this.userState?.token) {\n      Endpoint.updateLike(article).subscribe((next) => {\n        const index = this.articles.articles.indexOf(article);\n        this.articles.articles.splice(index, 1, next);\n        this.renderComponent!();\n      });\n    } else {\n      this.router.navigate('/login').subscribe();\n    }\n  }\n\n}\n","import { Factor } from '@sgrud/core';\nimport { Component, Reference, Route, Router } from '@sgrud/shell';\nimport { Store } from '@sgrud/state';\nimport { Errors, UserStore } from 'sgrud-realworld-core';\nimport { ErrorMessages } from '../fragment/error/messages';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'register-component': RegisterComponent;\n  }\n}\n\n@Route({\n  path: 'register'\n})\n@Component('register-component')\nexport class RegisterComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Factor(() => UserStore)\n  private readonly store!: Store<UserStore>;\n\n  @Reference('form', ['input'])\n  private readonly form?: HTMLFormElement | undefined;\n\n  private errors?: Errors | undefined;\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"auth-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-xs-12 offset-md-3\">\n              <h1 className=\"text-xs-center\">Sign up</h1>\n              <p className=\"text-xs-center\">\n                <a href=\"/login\" is=\"router-link\">Have an account?</a>\n              </p>\n              <ErrorMessages errors={this.errors}/>\n              <form key=\"form\">\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    name=\"username\"\n                    placeholder=\"Your Name\"\n                    required={true}\n                    type=\"text\"/>\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    name=\"email\"\n                    pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$\"\n                    placeholder=\"Email\"\n                    required={true}\n                    type=\"text\"/>\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <input\n                    className=\"form-control form-control-lg\"\n                    name=\"password\"\n                    pattern=\"^.{8,}$\"\n                    placeholder=\"Password\"\n                    required={true}\n                    type=\"password\"/>\n                </fieldset>\n                <button\n                  className=\"btn btn-lg btn-primary pull-xs-right\"\n                  disabled={!this.form?.checkValidity() || undefined!}\n                  onclick={() => this.dispatchRegister()}\n                  type=\"button\">\n                  Sign up\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  private dispatchRegister(this: this & Component): void {\n    const formData = new FormData(this.form);\n\n    if (this.errors) {\n      this.errors = undefined;\n      this.renderComponent!();\n    }\n\n    this.store.dispatch('register', [\n      formData.get('email')!.toString(),\n      formData.get('username')!.toString(),\n      formData.get('password')!.toString()\n    ]).subscribe({\n      error: ({ errors }: { errors: Errors }) => {\n        this.errors = errors;\n        this.renderComponent!();\n      },\n      next: ({ username }) => this.router.navigate(\n        `/profile/${username!}`\n      ).subscribe()\n    });\n  }\n\n}\n","import { BusHandler } from '@sgrud/bus';\nimport { Factor, Kernel } from '@sgrud/core';\nimport { Component, Reference, Route, Router } from '@sgrud/shell';\nimport { StateHandler, Store } from '@sgrud/state';\nimport { filter, first, from, map, skipWhile, switchMap } from 'rxjs';\nimport { FadeQueue, UserStore } from 'sgrud-realworld-core';\nimport { ArticleComponent } from './article';\nimport { ErrorComponent } from './error';\nimport { FooterComponent } from './footer';\nimport { HeaderComponent } from './header';\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { ProfileComponent } from './profile';\nimport { RegisterComponent } from './register';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'app-component': AppComponent;\n  }\n}\n\n@Route({\n  path: '',\n  children: [\n    ArticleComponent,\n    ErrorComponent,\n    HomeComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent\n  ],\n  slots: {\n    header: HeaderComponent,\n    footer: FooterComponent\n  }\n})\n@Component('app-component')\nexport class AppComponent extends HTMLElement implements Component {\n\n  static {\n    new BusHandler('/realworld/worker');\n    new StateHandler('/realworld/.');\n  }\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => FadeQueue)\n  private readonly fadeQueue!: FadeQueue;\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Factor(() => UserStore)\n  private readonly userStore!: Store<UserStore>;\n\n  @Reference('main')\n  private readonly main?: HTMLElement | undefined;\n\n  public get template(): JSX.Element {\n    return <>\n      <slot name=\"header\"/>\n      <main key=\"main\"><slot/></main>\n      <slot name=\"footer\"/>\n    </>;\n  }\n\n  public constructor() {\n    super();\n\n    from(this.userStore).pipe(\n      first(({ username }) => !!username),\n      switchMap(() => new Kernel().require('/realworld/lazy'))\n    ).subscribe();\n\n    from(this.userStore).pipe(\n      filter(() => !document.hasFocus()),\n      skipWhile(({ username }) => !username),\n      map(({ username }) => username ? `/profile/${username}` : '/login'),\n      switchMap((path) => this.router.navigate(path, undefined, 'replace'))\n    ).subscribe();\n  }\n\n  public connectedCallback(this: this & Component): void {\n    from(StateHandler).subscribe(() => {\n      this.renderComponent!();\n      this.fadeQueue.element = this.main!;\n    });\n  }\n\n}\n"],"names":["ArticleComment","props","children","body","createdAt","comment","image","username","author","href","_jsx","_jsxs","className","is","src","Date","toLocaleString","ArticleMeta","article","_Fragment","ArticleTags","tagList","length","map","tag","DeleteButton","ondelete","onclick","bind","undefined","type","EditButton","slug","FollowButton","onfollow","profile","following","LikeButton","onlike","favorited","ArticleComponent","HTMLElement","constructor","args","super","styles","this","router","userState","form","comments","template","_this$userState","_this$userState2","_this$userState3","_this$userState4","_this$userState5","_this$form","title","removeArticle","updateFollow","updateLike","token","favoritesCount","html","marked","name","placeholder","required","rows","disabled","checkValidity","updateComment","_this$userState6","removeComment","Endpoint","subscribe","navigate","splice","indexOf","renderComponent","formData","FormData","get","toString","next","_this$form2","unshift","reset","_this$userState7","assign","_this$userState8","__decorate","Factor","Router","prototype","Fluctuate","UserStore","Reference","Resolve","params","readArticle","readComments","Route","path","Component","ErrorComponent","error","style","background","message","connectedCallback","console","Catch","FooterComponent","getFullYear","HeaderComponent","routerState","_extends","navLink","parts","_this$routerState","join","rebase","ArticlePager","count","limit","offset","onoffset","page","Math","floor","pages","ceil","Array","fill","_","index","event","preventDefault","ArticlePreview","description","ArticleList","articles","articlesCount","HomeComponent","readArticles","navPill","Object","keys","every","key","_this$articles","ErrorMessages","errors","readTags","LoginComponent","store","pattern","dispatchLogin","dispatch","ProfileComponent","bio","concat","favorites","from","pipe","first","switchMap","readProfile","of","RegisterComponent","dispatchRegister","AppComponent","_temp","fadeQueue","userStore","main","Kernel","require","filter","document","hasFocus","skipWhile","StateHandler","element","BusHandler","FadeQueue","slots","header","footer"],"mappings":"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"}