{"version":3,"file":"index.modern.js","sources":["../../packages/lazy/src/component/editor.tsx","../../packages/lazy/src/component/settings.tsx"],"sourcesContent":["import { Factor } from '@sgrud/core';\nimport { Component, Reference, Resolve, Route, Router } from '@sgrud/shell';\nimport { of } from 'rxjs';\nimport { Article, Endpoint, Errors } from 'sgrud-realworld-core';\nimport { AppComponent, ErrorMessages } from 'sgrud-realworld-eager';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'editor-component': EditorComponent;\n  }\n}\n\n@Route({\n  parent: AppComponent,\n  path: 'editor/:slug?'\n})\n@Component('editor-component')\nexport class EditorComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Reference('form', ['input'])\n  private readonly form?: HTMLFormElement | undefined;\n\n  @Resolve<'editor/:slug?'>(({ params }) => {\n    return params.slug\n      ? Endpoint.readArticle(params.slug)\n      : of(undefined);\n  })\n  private readonly article?: Article | undefined;\n\n  private errors?: Errors | undefined;\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"editor-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-10 col-xs-12 offset-md-1\">\n              <ErrorMessages errors={this.errors}/>\n              <form key=\"form\">\n                <fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      name=\"title\"\n                      placeholder=\"Article Title\"\n                      required={true}\n                      type=\"text\"\n                      value={this.article?.title ?? ''}/>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      name=\"description\"\n                      placeholder=\"What's this article about?\"\n                      required={true}\n                      type=\"text\"\n                      value={this.article?.description ?? ''}/>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <textarea\n                      className=\"form-control\"\n                      name=\"body\"\n                      placeholder=\"Write your article (in markdown)\"\n                      required={true}\n                      rows={8}>\n                      {this.article?.body}\n                    </textarea>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      name=\"tagList\"\n                      placeholder=\"Enter tags\"\n                      type=\"text\"\n                      value={this.article?.tagList.join(' ') ?? ''}/>\n                    <div className=\"tag-list\"></div>\n                  </fieldset>\n                  <button\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                    disabled={!this.form?.checkValidity() || undefined!}\n                    onclick={() => this.updateArticle()}\n                    type=\"button\">\n                    Publish Article\n                  </button>\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  private updateArticle(this: this & Component): void {\n    const formData = new FormData(this.form);\n\n    if (this.errors) {\n      this.errors = undefined;\n      this.renderComponent!();\n    }\n\n    Endpoint.updateArticle({\n      ...this.article,\n      body: formData.get('body')!.toString(),\n      description: formData.get('description')!.toString(),\n      tagList: formData.get('tagList')!.toString().split(' '),\n      title: formData.get('title')!.toString()\n    }).subscribe({\n      error: ({ errors }: { errors: Errors }) => {\n        this.errors = errors;\n        this.renderComponent!();\n      },\n      next: (article) => this.router.navigate(\n        `/article/${article.slug}`\n      ).subscribe()\n    });\n  }\n\n}\n","import { Factor } from '@sgrud/core';\nimport { Component, Fluctuate, Reference, Route, Router } from '@sgrud/shell';\nimport { Store } from '@sgrud/state';\nimport { Errors, UserStore } from 'sgrud-realworld-core';\nimport { AppComponent, ErrorMessages } from 'sgrud-realworld-eager';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'settings-component': SettingsComponent;\n  }\n}\n\n@Route({\n  parent: AppComponent,\n  path: 'settings'\n})\n@Component('settings-component')\nexport class SettingsComponent extends HTMLElement implements Component {\n\n  public readonly styles: string[] = ['@import url(\"/realworld/style.css\");'];\n\n  @Factor(() => Router)\n  private readonly router!: Router;\n\n  @Factor(() => UserStore)\n  private readonly userStore!: Store<UserStore>;\n\n  @Fluctuate(() => new UserStore())\n  private readonly userState?: Store.State<UserStore> | undefined;\n\n  @Reference('form', ['input'])\n  private readonly form?: HTMLFormElement | undefined;\n\n  private errors?: Errors | undefined;\n\n  public get template(): JSX.Element {\n    return <>\n      <div className=\"settings-page\">\n        <div className=\"container page\">\n          <div className=\"row\">\n            <div className=\"col-md-6 col-xs-12 offset-md-3\">\n              <h1 className=\"text-xs-center\">Your Settings</h1>\n              <ErrorMessages errors={this.errors}/>\n              <form key=\"form\">\n                <fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      name=\"image\"\n                      placeholder=\"URL of profile picture\"\n                      type=\"url\"\n                      value={this.userState?.image ?? ''}/>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      name=\"username\"\n                      placeholder=\"Your Name\"\n                      required={true}\n                      type=\"text\"\n                      value={this.userState?.username ?? ''}/>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <textarea\n                      className=\"form-control form-control-lg\"\n                      name=\"bio\"\n                      placeholder=\"Short bio about you\"\n                      rows={8}>\n                      {this.userState?.bio}\n                    </textarea>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      name=\"email\"\n                      pattern=\"^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$\"\n                      placeholder=\"Email\"\n                      required={true}\n                      type=\"email\"\n                      value={this.userState?.email ?? ''}/>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      className=\"form-control form-control-lg\"\n                      name=\"password\"\n                      pattern=\"^.{8,}$\"\n                      placeholder=\"Password\"\n                      type=\"password\"/>\n                  </fieldset>\n                  <button\n                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                    disabled={!this.form?.checkValidity() || undefined!}\n                    onclick={() => this.dispatchUpdate()}\n                    type=\"button\">\n                    Update Settings\n                  </button>\n                </fieldset>\n              </form>\n              <hr />\n              <button\n                className=\"btn btn-outline-danger\"\n                onclick={() => this.dispatchLogout()}\n                type=\"button\">\n                Or click here to logout.\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>;\n  }\n\n  private dispatchLogout(this: this & Component): void {\n    this.userStore.dispatch('logout').subscribe({\n      error: ({ errors }: { errors: Errors }) => {\n        this.errors = errors;\n        this.renderComponent!();\n      },\n      next: () => this.router.navigate(\n        '/login'\n      ).subscribe()\n    });\n  }\n\n  private dispatchUpdate(this: this & Component): void {\n    const formData = new FormData(this.form);\n\n    if (this.errors) {\n      this.errors = undefined;\n      this.renderComponent!();\n    }\n\n    this.userStore.dispatch('update', [{\n      bio: formData.get('bio')!.toString(),\n      email: formData.get('email')!.toString(),\n      image: formData.get('image')!.toString(),\n      password: formData.get('password')!.toString(),\n      username: formData.get('username')!.toString()\n    }]).subscribe({\n      error: ({ errors }: { errors: Errors }) => {\n        this.errors = errors;\n        this.renderComponent!();\n      },\n      next: ({ username }) => this.router.navigate(\n        `/profile/${username!}`\n      ).subscribe()\n    });\n  }\n\n}\n"],"names":["EditorComponent","HTMLElement","constructor","args","styles","router","this","form","article","errors","template","_this$article$title","_this$article","_this$article$descrip","_this$article2","_this$article3","_this$article$tagList","_this$article4","_this$form","_jsx","_Fragment","children","className","_jsxs","ErrorMessages","name","placeholder","required","type","value","title","description","rows","body","tagList","join","disabled","checkValidity","undefined","onclick","updateArticle","formData","FormData","renderComponent","Endpoint","_extends","get","toString","split","subscribe","error","next","navigate","slug","__decorate","Factor","Router","prototype","Reference","Resolve","params","readArticle","of","Route","parent","AppComponent","path","Component","SettingsComponent","userStore","userState","_this$userState$image","_this$userState","_this$userState$usern","_this$userState2","_this$userState3","_this$userState$email","_this$userState4","image","username","bio","pattern","email","dispatchUpdate","dispatchLogout","dispatch","password","UserStore","Fluctuate"],"mappings":"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"}